{% extends 'base.html.twig' %}

{% block body %}
    {% set summary = pagination.items %}
    {% dump(stats)%}
    {% dump(choices)%}
    {% if stats is not empty %}
    <div class="row">
        <div class="col-xs-5 col-sm-5 col-md-4 col-lg-3 sidebar" id="facets" >
            {% include 'default/partial/facet_stats.html.twig' with {'itemNumberPerPage' : pagination.getItemNumberPerPage, 'currentPage' : pagination.getCurrentPageNumber, 'choices':choicesFacets} %}
        </div>
        
        <div class="col-xs-offset-5 col-sm-offset-5 col-md-offset-4 col-lg-offset-3 col-xs-7 col-sm-7 col-md-8 col-lg-9" id="diffs" data-institutioncode="{{institutionCode}}">
            <a href="{{path('export', {'institutionCode' : institutionCode})}}">Export</a>
            <div class="navigation">
                {{ knp_pagination_render(pagination) }}
                <div>
                    <label for="maxItemPerPage">{{'label.maxItemPerPage' | trans }}</label>
                    <select name="maxItemPerPage" id="maxItemPerPage">
                        <option value="5" {{maxItemPerPage == 5 ? 'selected="true"':''}}>5</option>
                        <option value="10" {{maxItemPerPage == 10 ? 'selected="true"':''}}>10</option>
                        <option value="20" {{maxItemPerPage == 20 ? 'selected="true"':''}}>20</option>
                        <option value="50" {{maxItemPerPage == 50 ? 'selected="true"':''}}>50</option>
                    </select>
                </div>
            </div>
            {% include 'default/partial/filter.html.twig' with { 'currentPage': pagination.getCurrentPageNumber} %}
        {% for specimenId, classWithDiff in summary %}
            <div class="well{{ loop.index is odd ? ' odd' : '' }} specimen" id="{{specimenId}}">
            {% set specimenRecolnat = attribute(specimensRecolnat, specimenId) | first %}
            {% set specimenInstitution = attribute(specimensInstitution, specimenId) | first %}
            
            {% include 'default/partial/short_specimen.html.twig' with {'specimen' : specimenRecolnat} %}
            
            {% if loop.index is odd %}
                <div class="clearfix">
                {% include 'default/partial/short_diff_specimen.html.twig' %}
                </div>
            {% else %}
                <div class="clearfix">
                {% include 'default/partial/short_diff_specimen2.html.twig' %}
                </div>
            {% endif %}
            
            </div>
        {% endfor %}
        {% endif %}
            <div class="navigation">
                {{ knp_pagination_render(pagination) }}
            </div>
        </div>
    </div>
{% include 'default/partial/smallModal.html.twig' %}
{% endblock %}

{% block javascripts %}
    <script type="text/javascript">
        
    $(document).ready(function(){
        var smallModal = $('#smallModal') ;
        
        var maxItemPerPage = localStorage.getItem('maxItemPerPage');
        $('#maxItemPerPage').change(function(){
            {% set currentPath = path(app.request.attributes.get('_route')) %}
            var url = "{{path(app.request.attributes.get('_route'),{'maxItemPerPage': '_itemNum'})}}";
            var item = $('#maxItemPerPage').find(":selected").text();
            localStorage.setItem('maxItemPerPage', item);
            maxItemPerPage = localStorage.getItem('maxItemPerPage');
            jQuery(location).attr('href', url.replace('_itemNum',item ));
        });
        
        function setChoice(choices, element, specimenId) {
            fieldName=element.data('fieldname');
            className=element.data('class');
            choice = element.attr('value') ;
            relationId = element.data('relationid') ;
            choice = {
                'className' : className, 
                'fieldName' : fieldName,
                'relationId' : relationId,
                'choice' : choice,
                'specimenId' : specimenId
            };
            flag = false;
            if (choices.length > 0) {
                for (var i = 0; i < choices.length; i++)
                   {
                     row = choices[i] ;
                     if (
                            row.className == choice.className &&
                            row.fieldName == choice.fieldName &&
                            row.relationId == choice.relationId 
                    ) {
                        flag = true;
                        choices[i] = choice;
                    }
                    }
                }
            if (!flag) {
                choices.push(choice);
            }
       }
        
        function updateDisplay(data) {
            data=JSON.parse(data);
            resetFacetCompt();
            var comptchoices=[];
            $.each(data, function(i) {
                $("input[type=radio][data-relationid='" + data[i]['relationId'] + "'][data-fieldname='" + data[i]['fieldName'] + "'][value="+data[i]['choice']+"]").prop('checked', true);
                if (typeof comptchoices[data[i]['specimenId']] === "undefined") {
                    comptchoices[data[i]['specimenId']]=[];
                }
                if (typeof comptchoices[data[i]['specimenId']][data[i]['className']] === "undefined") {
                    comptchoices[data[i]['specimenId']][data[i]['className']] =1;
                }
                else {
                    comptchoices[data[i]['specimenId']][data[i]['className']]++;
                }
                $("#facet-"+data[i]['specimenId']+"-"+data[i]['className']).data('comptchoices', comptchoices[data[i]['specimenId']][data[i]['className']]) ;
            });
            $("[id^='facet-']").each(function() {
                formattedTemplate = formatTemplate($(this).data('classname'), $(this).data('comptchoices'), $(this).data('comptdiffs')) ;
                $(this).html(formattedTemplate) ;
                if ($(this).data('comptchoices') === $(this).data('comptdiffs')) {
                    $(this).removeClass('text-warning').addClass('text-success');
                }
            });
        }
        
        function formatTemplate(className, comptChoices, comptDiffs) {
            if (comptChoices > 1) {
                spanChoices = $("#template-facet-string > .template-facet-choices-plural").html();
            }
            else {
                spanChoices = $("#template-facet-string > .template-facet-choices-single").html();
            }
            if (comptDiffs > 1) {
                spanDiffs = $("#template-facet-string > .template-facet-diffs-plural").html();
            }
            else {
                spanDiffs = $("#template-facet-string > .template-facet-diffs-single").html();
            }
            choicesFormatted = spanChoices.format(comptChoices);
            diffsFormatted = spanDiffs.format(comptDiffs);
            var facetTemplate = $("#template-facet").html();
            facet = facetTemplate.format(className, choicesFormatted, diffsFormatted) ;
            return facet;
        }
        
        function resetFacetCompt() {
            $("[id^='facet-']").data('comptchoices',0);
        }
        
        var institutionCode = $('#diffs').data('institutioncode');
        
        $('table.diff').find( ":radio" ).change(function() {
            var choices = new Array();
            var tableContext = $(this).parents('table.diff');
            var relationId = $(this).attr('name') ;
            var choice = $(this).attr('value') ;
            var specimenId = $(this).parents('div.specimen').attr('id');
            
            if ($(this).data('type') === 'diff-entity') {
                tableContext.find( ":radio")
                        .filter("[name^='"+relationId+"']")
                        .filter('[data-type="diff-field"]')
                        .filter('[value = "'+choice +'"]')
                        .map(
                        function() {
                            $(this).prop('checked', true);
                            setChoice(choices, $(this), specimenId);
                        });
            }
            else {
                setChoice(choices, $(this), specimenId);
            }
            $.ajax({
                url : Routing.generate('setChoice', { institutionCode: institutionCode}),
                data: {'choices' : choices},
                method: "POST"
            })
            .done(function(data) {
                //console.log(data);
                updateDisplay(data);
            });
        });
        
        // Filtres
        $("#form-filters").submit(function(event) {
            var data = $(this).serializeArray();
            data.push({name: 'maxItemPerPage', value: maxItemPerPage});
            var selectedSpecimens = $("[name^='check-specimen']").filter(":checked") ;
            console.log(selectedSpecimens.serializeArray()) ;
            if ($("[name='selectLevel2']").filter(":checked").val() === 'selectedSpecimens' && selectedSpecimens.length === 0) {
                smallModal.find('.modal-title').text('Erreur');
                smallModal.find('.modal-body').text('Vous devez sélectionner au moins un spécimen');
                smallModal.modal('show');
            }
            $.ajax({
                url : Routing.generate('setChoices'),
                data: data,
                method: "POST"
            })
            .done(function(data) {
                updateDisplay(data);
            });
            event.preventDefault();
        });
        $("#form-filters").find("[name^='selectLevel3']").change(function() {
            if ($(this).val() === 'allClasses' && $(this).prop('checked')) {
                //$("#form-filters").find("[name^='selectLevel3']:").prop('checked', true);
                $("#form-filters").find("[name^='selectLevel3']").not($(this)).prop('checked', true);
            }
            else {
                if ($(this).val() !== 'allClasses' ) {
                    $("#form-filters").find("[value='allClasses']").prop('checked', false);
                }
            }
        });
    });
    </script>
{% endblock %}