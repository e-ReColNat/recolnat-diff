<?php

namespace AppBundle\Entity\Repository;

/**
 * StratigraphyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StratigraphyRepository extends RecolnatRepositoryAbstract
{
    /**
     *
     * @param array $ids
     * @return array
     */
    public function findById($ids)
    {
        $query = $this->getEntityManager()->createQueryBuilder()
            ->select('s')
            ->from('AppBundle\Entity\Stratigraphy', 's', 's.geologicalcontextid')
            ->where('s.geologicalcontextid IN (:ids)')
            ->setParameter('ids', $ids)
            ->getQuery();
        return $query->getResult();
    }

    public function findOneById($id)
    {
        $query = $this->getEntityManager()->createQueryBuilder()
            ->select('s')
            ->from('AppBundle\Entity\Stratigraphy', 's', 's.geologicalcontextid')
            ->where('s.geologicalcontextid = :id')
            ->setParameter('id', $id)
            ->getQuery();
        return $query->getOneOrNullResult();
    }

    /**
     *
     * @param array $specimenCodes
     * @return \Doctrine\Common\Collections\Collection
     */
    public function findBySpecimenCodeUnordered($specimenCodes)
    {
        $qb = $this->createQueryBuilder('st');

        $qb
            ->select('st')
            ->join('st.specimen', 's');
        $qb->where($qb->expr()->in($this->getExprConcatSpecimenCode(), ':specimenCodes'));
        $qb->setParameter('specimenCodes', $specimenCodes);
        return $qb->getQuery()->getResult();
    }

    /**
     *
     * @param array $specimenCodes
     * @return array
     */
    public function findBySpecimenCodes($specimenCodes)
    {
        $qb = $this->createQueryBuilder('st');

        $qb
            ->select('st')
            ->addSelect($this->getExprConcatSpecimenCode().' as specimencode')
            ->join('st.specimen', 's');
        $qb->where($qb->expr()->in($this->getExprConcatSpecimenCode(), ':specimenCodes'));
        $qb->setParameter('specimenCodes', $specimenCodes);
        return $this->orderResultSetBySpecimenCode($qb->getQuery()->getResult(), 'geologicalcontextid');
    }
}
