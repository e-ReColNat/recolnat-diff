<?php

namespace AppBundle\Entity\Repository;

/**
 * RecolteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RecolteRepository extends RecolnatRepositoryAbstract
{
    /**
     *
     * @param array $ids
     * @return array
     */
    public function findById($ids)
    {
        $query = $this->getEntityManager()->createQueryBuilder()
            ->select('r')
            ->from('AppBundle\Entity\Recolte', 'r', 'r.eventid')
            ->where('r.eventid IN (\''.implode('\',\'', $ids).'\')')
            ->getQuery();
        return $query->getResult();
    }

    public function findOneById($id)
    {
        $query = $this->getEntityManager()->createQueryBuilder()
            ->select('r')
            ->from('AppBundle\Entity\Recolte', 'r', 'r.eventid')
            ->where('r.eventid = :id')
            ->setParameter('id', $id)
            ->getQuery();
        return $query->getOneOrNullResult();
    }

    /**
     *
     * @param array $specimenCodes
     * @return \Doctrine\Common\Collections\Collection
     */
    public function findBySpecimenCodeUnordered($specimenCodes)
    {
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('r')
            ->from('AppBundle\Entity\Recolte', 'r')
            ->join('AppBundle\Entity\Specimen', 's')
            ->andWhere('s.recolte = r.eventid');
        $this->setSpecimenCodesWhereClause($qb, $specimenCodes);
        return $qb->getQuery()->getResult();
    }

    /**
     *
     * @param array $specimenCodes
     * @return array
     */
    public function findBySpecimenCodes($specimenCodes)
    {
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('r')
            ->addSelect($this->getExprConcatSpecimenCode().' as specimencode')
            ->from('AppBundle\Entity\Recolte', 'r')
            ->join('AppBundle\Entity\Specimen', 's')
            ->andWhere('s.recolte = r.eventid');
        $this->setSpecimenCodesWhereClause($qb, $specimenCodes);
        return $this->orderResultSetBySpecimenCode($qb->getQuery()->getResult(), 'eventid');
    }
}
